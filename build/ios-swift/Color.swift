
//
// Color.swift
//

// Do not edit directly
// Generated on Tue, 18 Oct 2022 12:52:54 GMT


import SwiftUI

extension Color {
    static let darkPaletteNeutrals0 = Color(red: 1.000, green: 1.000, blue: 1.000, opacity: 1)
    static let darkPaletteNeutrals100 = Color(red: 0.082, green: 0.086, blue: 0.192, opacity: 1)
    static let darkPaletteNeutrals20 = Color(red: 0.961, green: 0.969, blue: 0.980, opacity: 1)
    static let darkPaletteNeutrals40 = Color(red: 0.898, green: 0.914, blue: 0.937, opacity: 1)
    static let darkPaletteNeutrals60 = Color(red: 0.788, green: 0.804, blue: 0.859, opacity: 1)
    static let darkPaletteNeutrals80 = Color(red: 0.584, green: 0.608, blue: 0.694, opacity: 1)
    static let darkPaletteNeutrals90 = Color(red: 0.373, green: 0.396, blue: 0.525, opacity: 1)
    static let darkPaletteNeutrals95 = Color(red: 0.204, green: 0.220, blue: 0.361, opacity: 1)
    static let darkPaletteOverlaysDark = Color(red: 0.008, green: 0.012, blue: 0.102, opacity: 0.5607843137254902)
    static let darkPaletteOverlaysLight = Color(red: 0.008, green: 0.012, blue: 0.102, opacity: 0.23921568627450981)
    static let darkPaletteOverlaysSelection = Color(red: 0.204, green: 0.365, blue: 1.000, opacity: 0.2)
    static let darkPalettePrimary0 = Color(red: 0.000, green: 0.008, blue: 0.278, opacity: 1)
    static let darkPalettePrimary20 = Color(red: 0.000, green: 0.059, blue: 0.588, opacity: 1)
    static let darkPalettePrimary40 = Color(red: 0.000, green: 0.157, blue: 0.886, opacity: 1)
    static let darkPalettePrimary60 = Color(red: 0.275, green: 0.439, blue: 0.976, opacity: 1)
    static let darkPalettePrimary80 = Color(red: 0.620, green: 0.753, blue: 1.000, opacity: 1)
    static let darkPalettePrimary90 = Color(red: 0.851, green: 0.918, blue: 1.000, opacity: 1)
    static let darkPalettePrimary95 = Color(red: 0.941, green: 0.969, blue: 1.000, opacity: 1)
    static let darkPaletteSecondary0 = Color(red: 0.278, green: 0.098, blue: 0.000, opacity: 1)
    static let darkPaletteSecondary20 = Color(red: 0.518, green: 0.196, blue: 0.059, opacity: 1)
    static let darkPaletteSecondary40 = Color(red: 0.757, green: 0.314, blue: 0.176, opacity: 1)
    static let darkPaletteSecondary60 = Color(red: 0.996, green: 0.467, blue: 0.345, opacity: 1)
    static let darkPaletteSecondary80 = Color(red: 1.000, green: 0.714, blue: 0.671, opacity: 1)
    static let darkPaletteSecondary90 = Color(red: 1.000, green: 0.875, blue: 0.859, opacity: 1)
    static let darkPaletteSecondary95 = Color(red: 1.000, green: 0.953, blue: 0.949, opacity: 1)
    static let darkPaletteSemanticError20 = Color(red: 0.698, green: 0.165, blue: 0.055, opacity: 1)
    static let darkPaletteSemanticError40 = Color(red: 0.886, green: 0.204, blue: 0.141, opacity: 1)
    static let darkPaletteSemanticError60 = Color(red: 0.973, green: 0.408, blue: 0.396, opacity: 1)
    static let darkPaletteSemanticError95 = Color(red: 1.000, green: 0.941, blue: 0.941, opacity: 1)
    static let darkPaletteSemanticInformation = Color(red: 0.478, green: 0.584, blue: 1.000, opacity: 1)
    static let darkPaletteSemanticSuccess20 = Color(red: 0.035, green: 0.478, blue: 0.220, opacity: 1)
    static let darkPaletteSemanticSuccess40 = Color(red: 0.086, green: 0.627, blue: 0.267, opacity: 1)
    static let darkPaletteSemanticSuccess60 = Color(red: 0.314, green: 0.769, blue: 0.439, opacity: 1)
    static let darkPaletteSemanticSuccess95 = Color(red: 0.914, green: 0.984, blue: 0.929, opacity: 1)
    static let darkPaletteSemanticWarning20 = Color(red: 0.600, green: 0.400, blue: 0.000, opacity: 1)
    static let darkPaletteSemanticWarning40 = Color(red: 0.988, green: 0.584, blue: 0.020, opacity: 1)
    static let darkPaletteSemanticWarning60 = Color(red: 1.000, green: 0.741, blue: 0.400, opacity: 1)
    static let darkPaletteSemanticWarning95 = Color(red: 1.000, green: 0.980, blue: 0.922, opacity: 1)
    static let darkPaletteShadowBase = Color(red: 0.082, green: 0.086, blue: 0.192, opacity: 0.06)
    static let lightPaletteNeutrals0 = Color(red: 0.055, green: 0.055, blue: 0.078, opacity: 1)
    static let lightPaletteNeutrals100 = Color(red: 1.000, green: 1.000, blue: 1.000, opacity: 1)
    static let lightPaletteNeutrals20 = Color(red: 0.247, green: 0.247, blue: 0.278, opacity: 1)
    static let lightPaletteNeutrals40 = Color(red: 0.416, green: 0.420, blue: 0.459, opacity: 1)
    static let lightPaletteNeutrals60 = Color(red: 0.620, green: 0.624, blue: 0.659, opacity: 1)
    static let lightPaletteNeutrals80 = Color(red: 0.788, green: 0.792, blue: 0.820, opacity: 1)
    static let lightPaletteNeutrals90 = Color(red: 0.902, green: 0.906, blue: 0.922, opacity: 1)
    static let lightPaletteNeutrals95 = Color(red: 0.961, green: 0.961, blue: 0.969, opacity: 1)
    static let lightPaletteOverlaysBase = Color(red: 0.000, green: 0.000, blue: 0.000, opacity: 0.3)
    static let lightPalettePrimary0 = Color(red: 0.000, green: 0.008, blue: 0.278, opacity: 1)
    static let lightPalettePrimary20 = Color(red: 0.000, green: 0.059, blue: 0.588, opacity: 1)
    static let lightPalettePrimary40 = Color(red: 0.000, green: 0.157, blue: 0.886, opacity: 1)
    static let lightPalettePrimary60 = Color(red: 0.275, green: 0.439, blue: 0.976, opacity: 1)
    static let lightPalettePrimary80 = Color(red: 0.620, green: 0.753, blue: 1.000, opacity: 1)
    static let lightPalettePrimary90 = Color(red: 0.851, green: 0.918, blue: 1.000, opacity: 1)
    static let lightPalettePrimary95 = Color(red: 0.941, green: 0.969, blue: 1.000, opacity: 1)
    static let lightPaletteSecondary0 = Color(red: 0.278, green: 0.098, blue: 0.000, opacity: 1)
    static let lightPaletteSecondary20 = Color(red: 0.518, green: 0.196, blue: 0.059, opacity: 1)
    static let lightPaletteSecondary40 = Color(red: 0.757, green: 0.314, blue: 0.176, opacity: 1)
    static let lightPaletteSecondary60 = Color(red: 0.996, green: 0.467, blue: 0.345, opacity: 1)
    static let lightPaletteSecondary80 = Color(red: 1.000, green: 0.714, blue: 0.671, opacity: 1)
    static let lightPaletteSecondary90 = Color(red: 1.000, green: 0.875, blue: 0.859, opacity: 1)
    static let lightPaletteSecondary95 = Color(red: 1.000, green: 0.953, blue: 0.949, opacity: 1)
    static let lightPaletteSemanticError20 = Color(red: 0.698, green: 0.165, blue: 0.055, opacity: 1)
    static let lightPaletteSemanticError40 = Color(red: 0.886, green: 0.204, blue: 0.141, opacity: 1)
    static let lightPaletteSemanticError60 = Color(red: 0.973, green: 0.408, blue: 0.396, opacity: 1)
    static let lightPaletteSemanticError95 = Color(red: 1.000, green: 0.941, blue: 0.941, opacity: 1)
    static let lightPaletteSemanticSuccess20 = Color(red: 0.035, green: 0.478, blue: 0.220, opacity: 1)
    static let lightPaletteSemanticSuccess40 = Color(red: 0.086, green: 0.627, blue: 0.267, opacity: 1)
    static let lightPaletteSemanticSuccess60 = Color(red: 0.314, green: 0.769, blue: 0.439, opacity: 1)
    static let lightPaletteSemanticSuccess95 = Color(red: 0.914, green: 0.984, blue: 0.929, opacity: 1)
    static let lightPaletteSemanticWarning20 = Color(red: 0.600, green: 0.400, blue: 0.000, opacity: 1)
    static let lightPaletteSemanticWarning40 = Color(red: 0.988, green: 0.584, blue: 0.020, opacity: 1)
    static let lightPaletteSemanticWarning60 = Color(red: 1.000, green: 0.741, blue: 0.400, opacity: 1)
    static let lightPaletteSemanticWarning95 = Color(red: 1.000, green: 0.980, blue: 0.922, opacity: 1)
    static let lightPaletteShadowBase = Color(red: 0.000, green: 0.000, blue: 0.000, opacity: 0.06)
}
